<?xml version="1.0" encoding="ISO-8859-1" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" version="0.1">

<!-- Defintion of global simple elements -->
   <xs:element name="owner" type="xs:string"/>
   <xs:element name="name" type="xs:string"/>

<!-- Defintion of global attributes elements -->
   <xs:attribute name="owner" type="xs:string"/>
   <xs:attribute name="id" type="xs:int"/>
   <xs:attribute name="name" type="xs:string"/>


   <!-- resource data -->
   <xs:element name="resource">
      <xs:complexType>
         <xs:sequence>
            <xs:element ref="variable" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element ref="resource" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
         <xs:attribute ref="id" use="required"/>
         <xs:attribute ref="name"/>
      </xs:complexType>
   </xs:element>

   <!-- variable used in resources -->
   <xs:element name="variable">
      <xs:complexType>
         <xs:attribute ref="id" use="required"/>
         <xs:attribute ref="name"/>
         <xs:attribute name="maxValue" type="xs:int" use="required"/>
         <xs:attribute name="minValue" type="xs:int" use="required"/>
         <xs:attribute name="intialValue" type="xs:int" use="required"/>
      </xs:complexType>
   </xs:element>

   <!-- liason data -->
   <xs:element name="liason">
      <xs:complexType>
         <xs:sequence>
            <xs:element ref="liason" minOccurs="0" maxOccurs="unbounded"/>
         </xs:sequence>
         <xs:attribute ref="id" use="required"/>
         <xs:attribute ref="name"/>
      </xs:complexType>
   </xs:element>


   <!-- used for actions -->
   <xs:complexType name="actions">
      <xs:sequence>
         <xs:element name="Action" maxOccurs="unbounded" minOccurs="0">
            <xs:complexType>
               <xs:attribute name="variable" type="xs:int" use="required"/>
               <xs:attribute name="value" type="xs:int" use="required"/>
               <xs:attribute name="type" type="xs:int" use="required"/>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- used for resourcebooking -->
   <xs:complexType name="bookings">
      <xs:sequence>
         <xs:element name="resourceBooking" maxOccurs="unbounded" minOccurs="0">
            <xs:complexType>
               
               <xs:attribute name="resource" type="xs:int" use="required"/>
               <xs:attribute name="type" type="xs:int" use="required"/>
               
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <!-- used for pre and postcondition -->
   <xs:complexType name="conditions">
      <xs:sequence>
         <xs:element name="or" maxOccurs="unbounded" minOccurs="0">
            <xs:complexType>
               <xs:sequence>
                  <xs:element name="sequenceCondition" maxOccurs="unbounded" minOccurs="0">
                     <xs:complexType>
                        
                        <xs:attribute name="operation" type="xs:int" use="required"/>
                        <xs:attribute name="status" type="xs:int" use="required"/>
                        
                     </xs:complexType>
                  </xs:element>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:sequence>
   </xs:complexType>



   <!-- and an operationObject, should include a view aswell -->



   <!-- opeationData -->
   
   <xs:complexType name="operationData">
         
      <xs:sequence>

         <!-- simple descriptions -->
         <xs:element name="description" type="xs:string"/>
         <xs:element name="isPreoperation" type="xs:boolean"/>
         <xs:element name="isPostoperation" type="xs:boolean"/>
         <xs:element name="cost" type="xs:double"/>
         <xs:element name="RealizedBy" type="xs:int"/> <!-- has to point to a resource -->
         <xs:element name="Accomplishes" type="xs:int"/> <!-- has to point to a resource -->

            <!-- complex types describing lists in lists -->
         <xs:element name="preSequenceCondtions" type="conditions"/>
         <xs:element name="preResurceBooking" type="bookings"/>
         <xs:element name="preActions" type="actions"/>
            
         <xs:element name="sequenceInvariants" type="conditions"/>
         <xs:element name="actionInvariants" type="actions"/>

         <xs:element name="postSequenceCondtions" type="conditions"/>
         <xs:element name="postResurceBooking" type="bookings"/>
         <xs:element name="postActions" type="actions"/>

      </xs:sequence>
         

   </xs:complexType>

   <!-- operation with hierachy -->
   <xs:element name="operation">
      <xs:complexType>
        
         <xs:sequence>
            <xs:element ref="operation" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="operationData" type="operationData" maxOccurs="1" />
         </xs:sequence>

         <xs:attribute ref="id" use="required"/>
         <xs:attribute ref="name"/>
      </xs:complexType>
   </xs:element>

   <!-- Describe a view element -->
   <xs:complexType name="rectangle">
      <xs:attribute name="x" type="xs:double" use="required"/>
      <xs:attribute name="y" type="xs:double" use="required"/>
      <xs:attribute name="w" type="xs:double" use="required"/>
      <xs:attribute name="h" type="xs:double" use="required"/>
   </xs:complexType>

   <xs:element name="CellData">
      <xs:complexType>
         
         <xs:all>
            <xs:element name="geo">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="geometry" type="rectangle" minOccurs="1" maxOccurs="1" />
                     <xs:element name="alternateGeometry" type="rectangle" minOccurs="0" maxOccurs="1" />
                  </xs:sequence>
               </xs:complexType>   
            </xs:element>
         </xs:all>
         <xs:attribute name="refId" type="xs:int" use="required"/>
         <xs:attribute name="previousCell" type="xs:int" use="required"/>
         <xs:attribute name="type" type="xs:int" use="required"/>
         <xs:attribute name="relation" type="xs:int" use="required"/>
         <xs:attribute name="lastInRelation" type="xs:boolean" use="required"/>
         <xs:attribute name="expanded" type="xs:boolean" use="required"/>
         
      </xs:complexType>
   </xs:element>

<!-- Describe a view element -->
   
   <xs:complexType name="viewType">
      
      <xs:sequence>
         <xs:element ref="CellData" maxOccurs="unbounded" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute ref="id" use="required"/>
      <xs:attribute ref="name"/>
      <xs:attribute name="root" type="xs:int" use="required"/>
         
   </xs:complexType>
   

<!-- Root Elements -->
   <xs:element name="SequencePlannerProjectFile">
      <xs:complexType>
         <xs:sequence>
            <xs:element name="idCounter" type="xs:int"/>
            <xs:element name="Resources">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element ref="resource" maxOccurs="unbounded" minOccurs="0"/>
                  </xs:sequence>
               </xs:complexType>
            </xs:element>

            <xs:element name="Liasons">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element ref="liason" maxOccurs="unbounded" minOccurs="0"/>
                  </xs:sequence>
               </xs:complexType>
            </xs:element>

            <xs:element name="Operations">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element ref="operation" maxOccurs="unbounded" minOccurs="0"/>
                     <xs:element name="OperationViews" type="viewType" maxOccurs="unbounded" minOccurs="0"/>
                  </xs:sequence>
               </xs:complexType>
            </xs:element>

            <xs:element name="Views">
               <xs:complexType>
                  <xs:sequence>
                     <xs:element name="view" type="viewType" maxOccurs="unbounded" minOccurs="0"/>
                  </xs:sequence>
               </xs:complexType>
            </xs:element>
         </xs:sequence>
         <xs:attribute ref="owner"/>
      </xs:complexType>
   </xs:element>
</xs:schema>