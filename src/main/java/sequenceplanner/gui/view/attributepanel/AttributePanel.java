/*
 * AttributePanel.java
 *
 * Created on 2011-jun-21, 10:14:10
 */
package sequenceplanner.gui.view.attributepanel;

import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import sequenceplanner.model.SOP.ConditionsFromSopNode.ConditionType;
import sequenceplanner.model.data.OperationData;

/**
 * Class showing attributes of an {@link OperationData} object
 * @author Qw4z1
 */
public class AttributePanel extends javax.swing.JPanel{

    static void updateView() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**OperationData object, acting as model for the view**/
    private OperationData model;

    /** Creates new form AttributePanel */
    public AttributePanel(OperationData od) {

        initComponents();
        initVariables(od);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        operationIdLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        preCondList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        postCondList = new javax.swing.JList();
        jSeparator2 = new javax.swing.JSeparator();
        operationAttributeEditor = new sequenceplanner.gui.view.attributepanel.OperationAttributeEditor();

        operationIdLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        operationIdLabel.setText("Operation ID: ");

        jLabel1.setText("Preconditions");

        jScrollPane1.setViewportView(preCondList);

        jLabel2.setText("Postconditions");

        postCondList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(postCondList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
            .addComponent(operationAttributeEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(operationIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(operationIdLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(operationAttributeEditor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private sequenceplanner.gui.view.attributepanel.OperationAttributeEditor operationAttributeEditor;
    private javax.swing.JLabel operationIdLabel;
    private javax.swing.JList postCondList;
    private javax.swing.JList preCondList;
    // End of variables declaration//GEN-END:variables

    /**
     * Sets the ID label to display the id of the {@link OperationData} object.
     * @param id 
     */
    public void setID(int id) {
        this.operationIdLabel.setText("Operation ID: " + id);
    }

    /**
     * Sets the listobjects to display the conditions in the OperationData class.
     */
    public void setConditions() {
        DefaultListModel preListModel = new DefaultListModel();
        DefaultListModel postListModel = new DefaultListModel();
        if (model.getConditions() != null) {
            for (Object key : model.getConditions().keySet()) {
                if (key == ConditionType.POST) {
                    postListModel.addElement(model.getConditions().get(key).toString());
                } else if ((key == ConditionType.PRE)) {
                    preListModel.addElement(model.getConditions().get(key).toString());
                }
            }
            preCondList = new javax.swing.JList(postListModel);
            postCondList = new javax.swing.JList(postListModel);
        }
    }

    private void initVariables(OperationData od) {
        this.model = od;
        setConditions();
        this.setName(od.getName());
        setID(model.getId());

    }
    public void addEditorSaveListener(ActionListener l){
        operationAttributeEditor.addSaveButtonListener(l);
    }
    /**
     * Method for getting the inner {@link OperationAttributeeEditor}
     * @return 
     */
    public OperationAttributeEditor getEditor() {
        return operationAttributeEditor;
    }
}
